{"version":3,"sources":["misc/firebase.js","context/profile.context.js","components/PrivateRoute.js","components/PublicRoute.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","pages/SignIn.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","messaging","isSupported","usePublicVapidKey","onMessage","data","console","log","isOfflineForDatabase","state","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","tokenRefreshUnsub","authUnsub","onAuthStateChanged","a","authObj","ref","uid","on","snap","val","name","createdAt","avatar","email","snapshot","onDisconnect","set","then","getToken","currentToken","onTokenRefresh","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","PublicRoute","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","useRef","onFormChange","onSubmit","current","check","newRoomdata","admins","currentUser","push","Alert","info","error","message","className","Button","block","color","onClick","Icon","icon","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","length","Error","link","provider","linkWithPopup","Tag","closable","onClose","GoogleAuthProvider","FacebookAuthProvider","getNameInitials","splitName","toUpperCase","split","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","Boolean","location","hostname","match","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","Dashboard","onSignOut","newData","success","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomItem","room","lastMessage","datetime","Date","author","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","RoomInfoBtnModal","v","memo","EditRoomBtnDrawer","chatId","useParams","updateData","newName","newDesc","Top","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","Grid","Row","Col","xs","md","exact","path","SignIn","signInWithProvider","signInWithPopup","additionalUserInfo","user","isNewUser","displayName","mdOffset","Panel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03cabd13.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\nimport 'firebase/messaging';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyCWZUswV65zMTNNTmiTXg3P3smtw6xVHIg',\r\n  authDomain: 'chat-web-app-3b298.firebaseapp.com',\r\n  databaseURL: 'https://chat-web-app-3b298-default-rtdb.firebaseio.com',\r\n  projectId: 'chat-web-app-3b298',\r\n  storageBucket: 'chat-web-app-3b298.appspot.com',\r\n  messagingSenderId: '388644001391',\r\n  appId: '1:388644001391:web:fd0f85d26f98b7c6945f9a',\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\n\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();\r\n\r\nexport const messaging = firebase.messaging.isSupported()\r\n  ? app.messaging()\r\n  : null;\r\n\r\nif (messaging) {\r\n  messaging.usePublicVapidKey(\r\n    'BJM6T3Whfqnd83t0BzHxSqW9FuYU3Hsp7RcxH6Csjw6yynqFXCwM2m69vIamSa1omdD4nm9yiL_68jElqWwQh_U'\r\n  );\r\n\r\n  messaging.onMessage(data => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(data);\r\n  });\r\n}\r\n","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database, messaging } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n    let tokenRefreshUnsub;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(async authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n\r\n        if (messaging) {\r\n          try {\r\n            const currentToken = await messaging.getToken();\r\n            if (currentToken) {\r\n              await database\r\n                .ref(`/fcm_tokens/${currentToken}`)\r\n                .set(authObj.uid);\r\n            }\r\n          } catch (err) {\r\n            console.log('An error occurred while retrieving token. ', err);\r\n          }\r\n\r\n          tokenRefreshUnsub = messaging.onTokenRefresh(async () => {\r\n            try {\r\n              const currentToken = await messaging.getToken();\r\n              if (currentToken) {\r\n                await database\r\n                  .ref(`/fcm_tokens/${currentToken}`)\r\n                  .set(authObj.uid);\r\n              }\r\n            } catch (err) {\r\n              console.log('An error occurred while retrieving token. ', err);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        if (tokenRefreshUnsub) {\r\n          tokenRefreshUnsub();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authUnsub();\r\n\r\n      database.ref('.info/connected').off();\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n\r\n      if (tokenRefreshUnsub) {\r\n        tokenRefreshUnsub();\r\n      }\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Schema,\r\n  Alert,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { database, auth } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomdata = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid]: true,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await database.ref('rooms').push(newRoomdata);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new chat room\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New chat room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React, { useState } from 'react';\r\nimport { Tag, Icon, Button, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You can not disconnect from ${providerId}`);\r\n      }\r\n\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 400);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n      {isConnected['facebook.com'] && (\r\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        )}\r\n\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to Facebook\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return (\r\n    <Avatar circle {...avatarProps}>\r\n      {getNameInitials(name)}\r\n    </Avatar>\r\n  );\r\n};\r\nexport default ProfileAvatar;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Modal, Button, Alert } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { storage, database } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File process error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const { profile } = useProfile();\r\n  const [img, setImg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const avatarEditorRef = useRef();\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","import React from 'react';\r\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport EditableInput from '../EditableInput';\r\nimport { database } from '../../misc/firebase';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\r\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\r\nimport Dashboard from '.';\r\nimport { auth, database } from '../../misc/firebase';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">{lastMessage.author.name}</div>\r\n              <span>{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No messages yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Nav, Loader } from 'rsuite';\r\nimport RoomItem from './RoomItem';\r\nimport { useRooms } from '../../context/rooms.context';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n  const topSidebarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSidebarRef}>\r\n        <DashboardToggle />\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join conversation</Divider>\r\n      </div>\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { Button, Drawer, Alert } from 'rsuite';\r\nimport { useParams } from 'react-router';\r\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditableInput from '../../EditableInput';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { database } from '../../../misc/firebase';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { chatId } = useParams();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Successfully updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can not be empty\"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            emptyMsg=\"Description can not be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react';\r\nimport { Icon, ButtonToolbar } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (error) {\r\n        setIsUploading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const { name, avatar, createdAt } = profile;\r\n\r\n  const shortName = profile.name.split(' ')[0];\r\n\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React, { memo } from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport { Button } from 'rsuite';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove admin permission'\r\n                : 'Give admin in this room'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => handleLike(message.id)}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {text && <span className=\"word-breal-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable consistent-return */\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { database, auth, storage } from '../../../misc/firebase';\r\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold;\r\n}\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n          setMessages(data);\r\n\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n      let alertMsg;\r\n\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin permission removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin permission granted';\r\n          }\r\n        }\r\n\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n          alertMsg = 'Like removed';\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Like added';\r\n        }\r\n      }\r\n\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        Alert.info('Message has been deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n\r\n      items.push(...msgs);\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\n\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Grid, Row, Col } from 'rsuite';\r\nimport { Switch, Route, useRouteMatch } from 'react-router';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport Chat from './Chat';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width: 992px)');\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Container, Grid, Row, Panel, Col, Button, Icon, Alert } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed in', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome to Chat</h2>\r\n                <p>Progressive chat platform for neophytes</p>\r\n              </div>\r\n\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue with Facebook\r\n                </Button>\r\n\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue with Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\nimport './styles/main.scss';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <SignIn />\n        </PublicRoute>\n        <PrivateRoute path=\"/\">\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}