{"version":3,"sources":["misc/helpers.js","misc/firebase.js","context/profile.context.js","components/PrivateRoute.js","components/PublicRoute.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/SendFcmBtnModal.js","components/chat-window/top/AskFcmBtnModal.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","pages/SignIn.js","App.js","index.js"],"names":["getNameInitials","name","splitName","toUpperCase","split","length","transformToArr","snapVal","Object","keys","transformToArrWithId","map","roomId","id","getUserUpdates","userId","keyToUpdate","value","db","a","updates","getMsgs","ref","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","isLocalhost","Boolean","window","location","hostname","match","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","functions","messaging","isSupported","usePublicVapidKey","onMessage","notification","title","body","Toast","info","description","duration","useEmulator","isOfflineForDatabase","state","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","tokenRefreshUnsub","authUnsub","onAuthStateChanged","authObj","uid","on","snap","val","data","createdAt","avatar","email","snapshot","onDisconnect","set","then","navigator","serviceWorker","register","process","registration","swRegistration","getToken","vapidKey","serviceWorkerRegistration","currentToken","console","log","onTokenRefresh","off","Provider","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","PublicRoute","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","useRef","onFormChange","onSubmit","current","check","newRoomdata","admins","currentUser","fcmUsers","push","Alert","error","message","className","Button","block","color","onClick","Icon","icon","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","Error","link","provider","linkWithPopup","Tag","closable","onClose","GoogleAuthProvider","FacebookAuthProvider","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","Dashboard","onSignOut","newData","success","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomItem","room","lastMessage","datetime","Date","author","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","RoomInfoBtnModal","v","memo","EditRoomBtnDrawer","chatId","useParams","updateData","newName","newDesc","SendFcmBtnModal","sendFcm","httpsCallable","AskFcmBtnModal","isReceivingFcm","IconButton","backdrop","Notification","permission","remove","Top","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","Grid","Row","Col","xs","md","exact","path","SignIn","signInWithProvider","signInWithPopup","additionalUserInfo","user","isNewUser","displayName","mdOffset","Panel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.676349a9.chunk.js","sourcesContent":["export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n","/* eslint-disable no-undef */\r\nimport { Notification as Toast } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\nimport 'firebase/functions';\r\nimport 'firebase/messaging';\r\nimport { isLocalhost } from './helpers';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyCWZUswV65zMTNNTmiTXg3P3smtw6xVHIg',\r\n  authDomain: 'chat-web-app-3b298.firebaseapp.com',\r\n  databaseURL: 'https://chat-web-app-3b298-default-rtdb.firebaseio.com',\r\n  projectId: 'chat-web-app-3b298',\r\n  storageBucket: 'chat-web-app-3b298.appspot.com',\r\n  messagingSenderId: '388644001391',\r\n  appId: '1:388644001391:web:fd0f85d26f98b7c6945f9a',\r\n};\r\nconst app = firebase.initializeApp(config);\r\n\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();\r\nexport const functions = app.functions('us-central1');\r\nexport const fcmVapidKey =\r\n  'BJM6T3Whfqnd83t0BzHxSqW9FuYU3Hsp7RcxH6Csjw6yynqFXCwM2m69vIamSa1omdD4nm9yiL_68jElqWwQh_U';\r\n\r\nexport const messaging = firebase.messaging.isSupported()\r\n  ? app.messaging()\r\n  : null;\r\n\r\nif (messaging) {\r\n  messaging.usePublicVapidKey(\r\n    'BJM6T3Whfqnd83t0BzHxSqW9FuYU3Hsp7RcxH6Csjw6yynqFXCwM2m69vIamSa1omdD4nm9yiL_68jElqWwQh_U'\r\n  );\r\n\r\n  messaging.onMessage(({ notification }) => {\r\n    const { title, body } = notification;\r\n    Toast.info({ title, description: body, duration: 0 });\r\n  });\r\n}\r\n\r\nif (isLocalhost) {\r\n  functions.useEmulator('localhost', 5001);\r\n}\r\n","/* eslint-disable no-console */\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database, fcmVapidKey, messaging } from '../misc/firebase';\r\nimport { isLocalhost } from '../misc/helpers';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n    let tokenRefreshUnsub;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(async authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n\r\n        if (messaging) {\r\n          try {\r\n            let swRegistration;\r\n            if (isLocalhost) {\r\n              await navigator.serviceWorker\r\n                .register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js`)\r\n                .then(registration => {\r\n                  swRegistration = registration;\r\n                });\r\n            }\r\n            const currentToken = await messaging.getToken({\r\n              vapidKey: fcmVapidKey,\r\n              serviceWorkerRegistration: swRegistration,\r\n            });\r\n            if (currentToken) {\r\n              await database\r\n                .ref(`/fcm_tokens/${currentToken}`)\r\n                .set(authObj.uid);\r\n            }\r\n          } catch (err) {\r\n            console.log('An error occurred while retrieving token. ', err);\r\n          }\r\n\r\n          tokenRefreshUnsub = messaging.onTokenRefresh(async () => {\r\n            try {\r\n              const currentToken = await messaging.getToken();\r\n              if (currentToken) {\r\n                await database\r\n                  .ref(`/fcm_tokens/${currentToken}`)\r\n                  .set(authObj.uid);\r\n              }\r\n            } catch (err) {\r\n              console.log('An error occurred while retrieving token. ', err);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        if (tokenRefreshUnsub) {\r\n          tokenRefreshUnsub();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authUnsub();\r\n\r\n      database.ref('.info/connected').off();\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n\r\n      if (tokenRefreshUnsub) {\r\n        tokenRefreshUnsub();\r\n      }\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Schema,\r\n  Alert,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { database, auth } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomdata = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid]: true,\r\n      },\r\n      fcmUsers: {\r\n        [auth.currentUser.uid]: true,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await database.ref('rooms').push(newRoomdata);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new chat room\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New chat room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React, { useState } from 'react';\r\nimport { Tag, Icon, Button, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You can not disconnect from ${providerId}`);\r\n      }\r\n\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 400);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n      {isConnected['facebook.com'] && (\r\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        )}\r\n\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to Facebook\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return (\r\n    <Avatar circle {...avatarProps}>\r\n      {getNameInitials(name)}\r\n    </Avatar>\r\n  );\r\n};\r\nexport default ProfileAvatar;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Modal, Button, Alert } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { storage, database } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File process error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const { profile } = useProfile();\r\n  const [img, setImg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const avatarEditorRef = useRef();\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","import React from 'react';\r\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport EditableInput from '../EditableInput';\r\nimport { database } from '../../misc/firebase';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\r\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\r\nimport Dashboard from '.';\r\nimport { auth, database } from '../../misc/firebase';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">{lastMessage.author.name}</div>\r\n              <span>{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No messages yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Nav, Loader } from 'rsuite';\r\nimport RoomItem from './RoomItem';\r\nimport { useRooms } from '../../context/rooms.context';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n  const topSidebarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSidebarRef}>\r\n        <DashboardToggle />\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join conversation</Divider>\r\n      </div>\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { Button, Drawer, Alert } from 'rsuite';\r\nimport { useParams } from 'react-router';\r\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditableInput from '../../EditableInput';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { database } from '../../../misc/firebase';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { chatId } = useParams();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Successfully updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can not be empty\"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            emptyMsg=\"Description can not be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Schema,\r\n  Alert,\r\n} from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { functions } from '../../../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  title: StringType().isRequired('Title is required'),\r\n  message: StringType().isRequired('Message body is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  title: '',\r\n  message: '',\r\n};\r\n\r\nconst SendFcmBtnModal = () => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const sendFcm = functions.httpsCallable('sendFcm');\r\n      await sendFcm({ chatId, ...formValue });\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n      Alert.info('Notification has been send', 7000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 7000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"primary\" size=\"xs\" onClick={open}>\r\n        <Icon icon=\"podcast\" /> Broadcast message\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Send notification to room users.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Title</ControlLabel>\r\n              <FormControl name=\"title\" placeholder=\"Enter message title...\" />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <ControlLabel>Message</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"message\"\r\n                placeholder=\"Enter notification message...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Publish message\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendFcmBtnModal;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { IconButton, Icon, Modal, Button } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { auth, database } from '../../../misc/firebase';\r\n\r\nconst AskFcmBtnModal = () => {\r\n  const { chatId } = useParams();\r\n  const isReceivingFcm = useCurrentRoom(v => v.isReceivingFcm);\r\n  const { isOpen, open, close } = useModalState();\r\n  const onAccept = () => {\r\n    database\r\n      .ref(`/rooms/${chatId}/fcmUsers`)\r\n      .child(auth.currentUser.uid)\r\n      .set(true);\r\n  };\r\n  const onCancel = () => {\r\n    database\r\n      .ref(`/rooms/${chatId}/fcmUsers`)\r\n      .child(auth.currentUser.uid)\r\n      .remove();\r\n  };\r\n  return (\r\n    <>\r\n      <IconButton\r\n        icon={<Icon icon=\"podcast\" />}\r\n        color=\"blue\"\r\n        size=\"sm\"\r\n        circle\r\n        appearance={isReceivingFcm ? 'default' : 'ghost'}\r\n        onClick={open}\r\n      />\r\n      <Modal show={isOpen} onHide={close} size=\"xs\" backdrop=\"static\">\r\n        <Modal.Header>\r\n          <Modal.Title>Notifications Permissions</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isReceivingFcm ? (\r\n            <div className=\"text-center\">\r\n              <Icon className=\"text-green mb-3\" icon=\"check-circle\" size=\"5x\" />\r\n              <h6>\r\n                You are subscribed to broadcast messages sent by admins of this\r\n                room.\r\n              </h6>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center\">\r\n              <Icon\r\n                className=\"text-blue mb-3\"\r\n                icon=\"question-circle\"\r\n                size=\"5x\"\r\n              />\r\n              <h6>\r\n                Do you want to subscribe to messages sent by admins of this\r\n                room?\r\n              </h6>\r\n            </div>\r\n          )}\r\n          <p className=\"mt-2\">\r\n            To receive notifications make sure you allow Notifications in your\r\n            browser\r\n          </p>\r\n          <p>\r\n            Permission:\r\n            {Notification.permission === 'granted' ? (\r\n              <span className=\"text-green\">Granted</span>\r\n            ) : (\r\n              <span className=\"text-red\">Denied</span>\r\n            )}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {isReceivingFcm ? (\r\n            <Button color=\"green\" onClick={onCancel}>\r\n              I changed my mind\r\n            </Button>\r\n          ) : (\r\n            <Button color=\"green\" onClick={onAccept}>\r\n              Yes, I do\r\n            </Button>\r\n          )}\r\n          <Button onClick={close}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AskFcmBtnModal;\r\n","import React, { memo } from 'react';\r\nimport { Icon, ButtonToolbar } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport SendFcmBtnModal from './SendFcmBtnModal';\r\nimport AskFcmBtnModal from './AskFcmBtnModal';\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          <AskFcmBtnModal />\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        {isAdmin && <SendFcmBtnModal />}\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (error) {\r\n        setIsUploading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const { name, avatar, createdAt } = profile;\r\n\r\n  const shortName = profile.name.split(' ')[0];\r\n\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React, { memo } from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport { Button } from 'rsuite';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove admin permission'\r\n                : 'Give admin in this room'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => handleLike(message.id)}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {text && <span className=\"word-breal-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable consistent-return */\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { database, auth, storage } from '../../../misc/firebase';\r\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold;\r\n}\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n          setMessages(data);\r\n\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n      let alertMsg;\r\n\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin permission removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin permission granted';\r\n          }\r\n        }\r\n\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n          alertMsg = 'Like removed';\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Like added';\r\n        }\r\n      }\r\n\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        Alert.info('Message has been deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n\r\n      items.push(...msgs);\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\n\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const fcmUsers = transformToArr(currentRoom.fcmUsers);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n  const isReceivingFcm = fcmUsers.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n    isReceivingFcm,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Grid, Row, Col } from 'rsuite';\r\nimport { Switch, Route, useRouteMatch } from 'react-router';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport Chat from './Chat';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width: 992px)');\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Container, Grid, Row, Panel, Col, Button, Icon, Alert } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed in', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome to Chat</h2>\r\n                <p>Progressive chat platform for neophytes</p>\r\n              </div>\r\n\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue with Facebook\r\n                </Button>\r\n\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue with Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\nimport './styles/main.scss';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <SignIn />\n        </PublicRoute>\n        <PrivateRoute path=\"/\">\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}