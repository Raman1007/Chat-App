{"version":3,"sources":["misc/firebase.js","context/profile.context.js","components/PrivateRoute.js","components/PublicRoute.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","misc/helpers.js","components/EditableInput.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/index.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","pages/Home/Chat.js","pages/Home/index.js","pages/SignIn.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","isOfflineForDatabase","state","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","ref","uid","on","snap","val","data","name","createdAt","avatar","email","snapshot","onDisconnect","set","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","PublicRoute","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","useRef","onFormChange","onSubmit","a","current","check","newRoomData","admins","currentUser","push","Alert","info","error","message","className","Button","block","color","onClick","Icon","icon","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","getNameInitials","splitName","toUpperCase","split","length","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isvalidFile","warning","image","width","height","border","borderRadius","rotate","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","provider","linkWithPopup","Tag","closable","onClose","GoogleAuthProvider","FacebookAuthProvider","Dashboard","onSignOut","newData","success","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","EditRoomBtnDrawer","chatId","useParams","v","updateData","newName","newDesc","memo","RoomInfoBtnModal","Top","isAdmin","ButtonToolbar","getColor","presence","getText","toLocaleDateString","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","ProfileInfoBtnModal","btnProps","shortName","memberSince","renderFileMessage","contentType","url","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","likeCount","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","msgId","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","Bottom","onSendClick","msgData","messageId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","Grid","Row","Col","xs","md","exact","path","SignIn","signInWithProvider","signInWithPopup","additionalUserInfo","user","isNewUser","displayName","mdOffset","Panel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1413bb2.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyCWZUswV65zMTNNTmiTXg3P3smtw6xVHIg',\r\n  authDomain: 'chat-web-app-3b298.firebaseapp.com',\r\n  databaseURL: 'https://chat-web-app-3b298-default-rtdb.firebaseio.com',\r\n  projectId: 'chat-web-app-3b298',\r\n  storageBucket: 'chat-web-app-3b298.appspot.com',\r\n  messagingSenderId: '388644001391',\r\n  appId: '1:388644001391:web:fd0f85d26f98b7c6945f9a',\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\n\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n        database.ref('.info/connected').off();\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n    return () => {\r\n      authUnsub();\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n      database.ref('.info/connected').off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","/* eslint-disable consistent-return */\r\nimport { useCallback, useState, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n        setPresence(data);\r\n      }\r\n    });\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n  const ref = useRef(null);\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n  return [ref, value];\r\n}\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  ControlLabel,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  Modal,\r\n  Schema,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n  const onSubmit = async () => {\r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    const newRoomData = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid]: true,\r\n      },\r\n    };\r\n    try {\r\n      await database.ref('rooms').push(newRoomData);\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new chat room\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New chat room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                name=\"description\"\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n  return splitName[0][0];\r\n}\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n  return updates;\r\n}\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n    setIsEditable(false);\r\n  };\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return (\r\n    <Avatar circle {...avatarProps}>\r\n      {getNameInitials(name)}\r\n    </Avatar>\r\n  );\r\n};\r\nexport default ProfileAvatar;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png,.jpeg,.jpg';\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isvalidFile = file => acceptedFileTypes.includes(file.type);\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File process error'));\r\n      }\r\n    });\r\n  });\r\n};\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { profile } = useProfile();\r\n\r\n  const [img, setImg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const avatarEditorRef = useRef();\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n      if (isvalidFile(file)) {\r\n        setImg(file);\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong gfile type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child('avatar');\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public,max-age=${3600 * 24 * 3}`,\r\n      });\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n      await database.ref().update(updates);\r\n      setIsLoading(false);\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","import React, { useState } from 'react';\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You can not disconnect from ${providerId}`);\r\n      }\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n      {isConnected['facebook.com'] && (\r\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        )}\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to Facebook\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","import React from 'react';\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database } from '../../misc/firebase';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\nimport EditableInput from '../EditableInput';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport ProviderBlock from './ProviderBlock';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n      await database.ref().update(updates);\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n      <Drawer.Body>\r\n        <h3>Hey,{profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width:992px)');\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\nexport const useRooms = () => useContext(RoomsContext);\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">{lastMessage.author.name}</div>\r\n              <span>{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No message yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n  const topSidebarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSidebarRef}>\r\n        <DashboardToggle />\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join conversation</Divider>\r\n      </div>\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);\r\n","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../EditableInput';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { chatId } = useParams();\r\n  const isMobile = useMediaQuery('(max-width:992px)');\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Succesfully updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can not be empty\"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            emptyMsg=\"Description can not be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width:992px)');\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React from 'react';\r\nimport { Badge, Tooltip, Whisper } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { name, avatar, createdAt } = profile;\r\n  const shortName = profile.name.split(' ')[0];\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            {children}\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport { auth } from '../../../misc/firebase';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    );\r\n  }\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n  const [selfRef, isHovered] = useHover();\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n  const isMobile = useMediaQuery('(max-width:992px)');\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove admin permission'\r\n                : 'Give admin in this room'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => handleLike(message.id)}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            {...(isLiked ? { color: 'red' } : {})}\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n      <div>\r\n        {text && <span className=\"word-breal-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","/* eslint-disable consistent-return */\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { auth, database, storage } from '../../../misc/firebase';\r\nimport { groupBy, transformToArrWithId } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\n\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold;\r\n}\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const [messages, setMessages] = useState(null);\r\n\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n\r\n          setMessages(data);\r\n\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 500);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n      let alertMsg;\r\n\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin permission removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin permission granted';\r\n          }\r\n        }\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n          alertMsg = 'Like removed';\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Like added';\r\n        }\r\n      }\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        Alert.info('Message has been deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n      items.push(...msgs);\r\n    });\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, open, close } = useModalState();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n    setFileList(filtered);\r\n  };\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, { cacheControl: `public,max-age=${3600 * 24 * 3}` });\r\n      });\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n      const files = await Promise.all(shapePromises);\r\n      await afterUpload(files);\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            fileList={fileList}\r\n            action=\"\"\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, InputGroup } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, { cacheControl: `public,max-age=${3600 * 24 * 3}` });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (err) {\r\n        setIsUploading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n    const updates = {};\r\n    const messageId = database.ref('messages').push().key;\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n      const updates = {};\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n        const messageId = database.ref('messages').push().key;\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n      const lastMsgId = Object.keys(updates).pop();\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n      try {\r\n        await database.ref().update(updates);\r\n        setInput('');\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n  const rooms = useRooms();\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n  const { name, description } = currentRoom;\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width:992px)');\r\n  const { isExact } = useRouteMatch();\r\n  const canRenderSidebar = isDesktop || isExact;\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n      Alert.success('Signed in', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={20} md={12} mdOffset={6}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome To Chat</h2>\r\n                <p>Progressive chat platform for neophytes</p>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue with Facebook\r\n                </Button>\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue with Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\nimport './styles/main.scss';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <SignIn />\n        </PublicRoute>\n        <PrivateRoute path=\"/\">\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}